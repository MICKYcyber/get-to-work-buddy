<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <title>Proxy HTML Viewer</title>
    <style>
        html, body {
            margin: 0;
            padding: 0;
            height: 100%;
            font-family: Arial, sans-serif;
        }

        .top-bar {
            background-color: #000;
            color: white;
            display: flex;
            align-items: center;
            padding: 10px;
            gap: 10px;
            height: 50px;
        }

        .top-bar input[type="text"] {
            flex: 1;
            padding: 8px;
            font-size: 14px;
        }

        .top-bar button {
            padding: 8px 12px;
            font-size: 14px;
            background-color: #333;
            color: white;
            border: none;
            cursor: pointer;
        }

        .top-bar button:hover {
            background-color: #555;
        }

        #previewFrame {
            width: 100%;
            height: calc(100% - 50px);
            border: none;
        }
    </style>
</head>
<body>

    <div class="top-bar">
        <input type="text" id="urlInput" placeholder="Enter URL or search term" />
        <button onclick="fetchAndInject()">Fetch</button>
        <button onclick="fetchAndOpenNewTab()">Open in New Tab</button>
    </div>

    <iframe id="previewFrame"></iframe>

    <script>
        const CORS_SH_API_KEY = 'temp_58bd04df4912ca5b32b6cb19dd561c20';

        function normalizeURL(input) {
            let trimmed = input.trim();

            if (!trimmed.includes('.')) {
                return 'https://www.bing.com/search?q=' + encodeURIComponent(trimmed);
            }

            let url = trimmed;

            if (!/^https?:\/\//i.test(url)) {
                url = 'https://' + url;
            }

            try {
                let parsed = new URL(url);
                let domain = parsed.hostname;

                if (!/^www\./i.test(domain)) {
                    url = parsed.protocol + '//www.' + domain + parsed.pathname + parsed.search + parsed.hash;
                }
            } catch (e) {
                alert("Invalid URL.");
                throw e;
            }

            return url;
        }

        function fetchAndInject() {
            const rawInput = document.getElementById('urlInput').value;
            const iframe = document.getElementById('previewFrame');

            if (!rawInput) {
                alert("Please enter a valid URL or search term.");
                return;
            }

            let url;
            try {
                url = normalizeURL(rawInput);
            } catch {
                iframe.contentWindow.document.body.innerHTML = `<p style="color:red;">Invalid URL format.</p>`;
                return;
            }

            if (url.startsWith('https://www.bing.com/search')) {
                iframe.src = url;
                return;
            }

            const proxiedURL = `https://api.cors.sh/${url}`;
            const xhr = new XMLHttpRequest();
            xhr.open('GET', proxiedURL, true);
            xhr.setRequestHeader('x-cors-api-key', CORS_SH_API_KEY);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        const doc = iframe.contentWindow.document;
                        doc.open();
                        doc.write(xhr.responseText);
                        doc.close();
                    } else {
                        iframe.contentWindow.document.body.innerHTML = `<p style="color:red;">Failed to load: ${xhr.status}</p>`;
                    }
                }
            };
            xhr.onerror = function () {
                iframe.contentWindow.document.body.innerHTML = `<p style="color:red;">Request failed.</p>`;
            };
            xhr.send();

            iframe.contentWindow.document.body.innerHTML = '<p>Loading...</p>';
        }

        function fetchAndOpenNewTab() {
            const rawInput = document.getElementById('urlInput').value;

            if (!rawInput) {
                alert("Please enter a valid URL or search term.");
                return;
            }

            let url;
            try {
                url = normalizeURL(rawInput);
            } catch {
                alert("Invalid URL format.");
                return;
            }

            if (url.startsWith('https://www.bing.com/search')) {
                window.open(url, '_blank');
                return;
            }

            const proxiedURL = `https://api.cors.sh/${url}`;
            const newWindow = window.open('about:blank', '_blank');
            if (!newWindow) {
                alert("Popup blocked. Please allow popups for this site.");
                return;
            }

            newWindow.document.write('<p>Loading...</p>');

            const xhr = new XMLHttpRequest();
            xhr.open('GET', proxiedURL, true);
            xhr.setRequestHeader('x-cors-api-key', CORS_SH_API_KEY);
            xhr.onreadystatechange = function () {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status >= 200 && xhr.status < 300) {
                        newWindow.document.open();
                        newWindow.document.write(xhr.responseText);
                        newWindow.document.close();
                    } else {
                        newWindow.document.body.innerHTML = `<p style="color:red;">Failed to load: ${xhr.status}</p>`;
                    }
                }
            };
            xhr.onerror = function () {
                newWindow.document.body.innerHTML = `<p style="color:red;">Request failed.</p>`;
            };
            xhr.send();
        }
    </script>

</body>
</html>
